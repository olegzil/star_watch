%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et
{relx, [{release, {star_watch_server, "1.0.0"},[star_watch_server, sasl, runtime_tools]},
        {dev_mode, true},
        {include_erts, false},
        {extended_start_script, true},
        {sys_config, "config/sys.config"},
        {vm_args, "config/vm.args"},
        {lib_dirs, ["/usr/lib/erlang/lib", 
                    "/home/oleg/Projects/erlang_practice/star_watch_server/deps/jiffy/_build/default/lib/"]}       
        ]
}.

{profiles, [
    {prod, [{relx, [{dev_mode, false},
                    {include_erts, true}]}
     ]}
]}.
%% escript_incl_extra is for internal rebar-private use only.
%% Do not use outside rebar. Config interface is not stable.
{require_erts_vsn, ".*"}.
{require_otp_vsn, ".*"}.
{require_min_otp_vsn, ".*"}.

{escript_incl_extra, [{"priv/templates/*", "."}]}.
{include_src, false}.

{deps, [
    {jiffy, "1.1.1", "deps/"},
    {cowlib,"2.11.0", "deps/"},
    {cowboy, "2.9.0", "deps/"}
]}.

{erl_first_files, ["src/db_access.erl", 
                    "src/tar_watch_handler.erl",
                    "star_watch_server_app.erl",
                    "star_watch_server_sup.erl"
                    ]}.   

{alias, [
    {check, [xref,
             {cover, "-v --min_coverage=80"}]},

    {xref_checks,[
        %% enable most checks, but avoid 'unused calls' which is often
        %% very verbose
        undefined_functions, locals_not_used,
        deprecated_function_calls, deprecated_functions
    ]}
]}.

{base_dir, "_build"}.
%% directory in '<base_dir>/<profile>/' where deps go
{deps_dir, "lib"}.
%% where rebar3 operates from; defaults to the current working directory
{root_dir, "."}.
%% where checkout dependencies are to be located
{checkouts_dir, "_checkouts"}.
%% where, under <base_dir>/<profile> checkout dependencies are to be built
{checkouts_out_dir, "checkouts"}.
%% directory in '<base_dir>/<profile>/' where plugins go
{plugins_dir, "plugins"}.
%% directories where OTP applications for the project can be located
{project_app_dirs, ["apps/*", "lib/*", "."]}.
%% Directories where source files for an OTP application can be found
{src_dirs, ["src"]}.
%% Paths to miscellaneous Erlang files to compile for an app
%% without including them in its modules list
{extra_src_dirs, []}.


%% Types dict:dict() and digraph:digraph() have been introduced in Erlang 17.
%% At the same time, their counterparts dict() and digraph() are to be
%% deprecated in Erlang 18. namespaced_types option is used to select proper
%% type name depending on the OTP version used.
{erl_opts,
 [
  {platform_define, "(linux|solaris|freebsd|darwin)", 'HAVE_SENDFILE'},
  {platform_define, "(linux|freebsd)", 'BACKLOG', 128},
  {platform_define, "R13", 'old_inets'},
  {src_dirs, ["src"]}
  ]}.

{minimum_otp_vsn, "25.0.4"}.
{application_resource_extensions, [
    ".app.src.script", ".app.src"
]}.

{cover_enabled, true}.
{validate_app_modules, true}.
{base_dir, "_build"}.
%% directory in '<base_dir>/<profile>/' where deps go
{deps_dir, "lib"}.
%% where rebar3 operates from; defaults to the current working directory
{root_dir, "."}.
%% where checkout dependencies are to be located
{checkouts_dir, "_checkouts"}.
%% where, under <base_dir>/<profile> checkout dependencies are to be built
{checkouts_out_dir, "checkouts"}.




{xref_checks, []}.
{xref_queries,
 [{"(XC - UC) || (XU - X - B
      - (\"escript\":\"foldl\"/\"3\")
      - (\"eunit_test\":\"function_wrapper\"/\"2\")
      - (\"eflame\":\"apply\"/\"5\")
      - (\"abnfc\":\"file\"/\"2\")
      - (\"erlydtl\":\"compile\"/\"3\")
      - (\"lfe_comp\":\"file\"/\"2\")
      - (\"neotoma\":\"file\"/\"2\")
      - (\"protobuffs_compile\":\"scan_file\"/\"2\")
      - (\"gpb_compile\":\"file\"/\"2\")
      - (\"gpb_compile\":\"format_error\"/\"1\")
      - (\"diameter_codegen\":\"from_dict\"/\"4\")
      - (\"diameter_dict_util\":\"format_error\"/\"1\")
      - (\"diameter_dict_util\":\"parse\"/\"2\")
      - (\"erlang\":\"timestamp\"/\"0\")
      - (\"rebar_rnd\":\"seed\"/\"1\")
      - (\"rebar_rnd\":\"uniform\"/\"0\"))",
         []}]}.

{dialyzer,
 [
  {plt_extra_apps, [diameter]},
  {warnings,
   [
    unmatched_returns,
    error_handling,
    race_conditions
   ]}
 ]}.
